generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model deliveries {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  driver_id  Int?
  status     String?   @default("assigned")
  created_at DateTime? @default(now()) @db.Timestamp(6)
  drivers    drivers?  @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model drivers {
  id           Int          @id @default(autoincrement())
  name         String
  phone        String       @unique
  vehicle_type String?
  created_at   DateTime?    @default(now()) @db.Timestamp(6)
  is_available Boolean?     @default(true)
  deliveries   deliveries[]
}

model order_items {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id          Int           @id @default(autoincrement())
  user_id     Int?
  store_id    Int?
  status      String?       @default("pending")
  total       Decimal       @db.Decimal(10, 2)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  deliveries  deliveries[]
  order_items order_items[]
  stores      stores?       @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id          Int           @id @default(autoincrement())
  store_id    Int?
  name        String
  description String?
  price       Decimal       @db.Decimal(10, 2)
  stock       Int?          @default(0)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  stores      stores?       @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model stores {
  id         Int        @id @default(autoincrement())
  name       String
  address    String?
  phone      String?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  orders     orders[]
  products   products[]
}

model users {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  password_hash      String
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  firstname          String?
  lastname           String?
  street             String?
  city               String?
  postal             String?
  stripe_customer_id String?
  refresh_token      String?
  orders             orders[]
}
